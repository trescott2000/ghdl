<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: inheritancea759badd63 Pages: 1 -->
<svg width="576pt" height="65pt"
 viewBox="0.00 0.00 576.00 64.83" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(.4156 .4156) rotate(0) translate(4 152)">
<title>inheritancea759badd63</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-152 1382,-152 1382,4 -4,4"/>
<!-- pyGHDL.dom.Concurrent.ElsifGenerateBranch -->
<g id="node1" class="node">
<title>pyGHDL.dom.Concurrent.ElsifGenerateBranch</title>
<g id="a_node1"><a xlink:href="../pyGHDL/pyGHDL.dom.Concurrent.html#pyGHDL.dom.Concurrent.ElsifGenerateBranch" xlink:title="pyGHDL.dom.Concurrent.ElsifGenerateBranch" target="_top">
<polygon fill="none" stroke="#000000" stroke-width=".5" points="1378,-73 1138,-73 1138,-54 1378,-54 1378,-73"/>
<text text-anchor="middle" x="1258" y="-61" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyGHDL.dom.Concurrent.ElsifGenerateBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.ElsifGenerateBranch -->
<g id="node2" class="node">
<title>pyVHDLModel.SyntaxModel.ElsifGenerateBranch</title>
<polygon fill="none" stroke="#000000" stroke-width=".5" points="1102,-73 848,-73 848,-54 1102,-54 1102,-73"/>
<text text-anchor="middle" x="975" y="-61" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyVHDLModel.SyntaxModel.ElsifGenerateBranch</text>
</g>
<!-- pyVHDLModel.SyntaxModel.ElsifGenerateBranch&#45;&gt;pyGHDL.dom.Concurrent.ElsifGenerateBranch -->
<g id="edge1" class="edge">
<title>pyVHDLModel.SyntaxModel.ElsifGenerateBranch&#45;&gt;pyGHDL.dom.Concurrent.ElsifGenerateBranch</title>
<path fill="none" stroke="#000000" stroke-width=".5" d="M1102.0133,-63.5C1112.2417,-63.5 1122.5721,-63.5 1132.7878,-63.5"/>
<polygon fill="#000000" stroke="#000000" stroke-width=".5" points="1132.7926,-65.2501 1137.7926,-63.5 1132.7926,-61.7501 1132.7926,-65.2501"/>
</g>
<!-- pyVHDLModel.ModelEntity -->
<g id="node3" class="node">
<title>pyVHDLModel.ModelEntity</title>
<g id="a_node3"><a xlink:title="``ModelEntity`` is the base class for all classes in the VHDL language model,">
<polygon fill="none" stroke="#000000" stroke-width=".5" points="479.5,-148 333.5,-148 333.5,-129 479.5,-129 479.5,-148"/>
<text text-anchor="middle" x="406.5" y="-136" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyVHDLModel.ModelEntity</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.GenerateBranch -->
<g id="node6" class="node">
<title>pyVHDLModel.SyntaxModel.GenerateBranch</title>
<g id="a_node6"><a xlink:title="A ``GenerateBranch`` is a base&#45;class for all branches in a generate statements.">
<polygon fill="none" stroke="#000000" stroke-width=".5" points="811,-101 578,-101 578,-82 811,-82 811,-101"/>
<text text-anchor="middle" x="694.5" y="-89" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyVHDLModel.SyntaxModel.GenerateBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.ModelEntity&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch -->
<g id="edge4" class="edge">
<title>pyVHDLModel.ModelEntity&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch</title>
<path fill="none" stroke="#000000" stroke-width=".5" d="M479.55,-129.4496C499.5084,-126.7793 521.1141,-123.7068 541,-120.5 574.9162,-115.0308 612.8509,-107.8737 642.5233,-102.0382"/>
<polygon fill="#000000" stroke="#000000" stroke-width=".5" points="643.0209,-103.7238 647.5877,-101.0392 642.3435,-100.29 643.0209,-103.7238"/>
</g>
<!-- pyVHDLModel.SyntaxModel.ConcurrentDeclarations -->
<g id="node4" class="node">
<title>pyVHDLModel.SyntaxModel.ConcurrentDeclarations</title>
<polygon fill="none" stroke="#000000" stroke-width=".5" points="541,-111 272,-111 272,-92 541,-92 541,-111"/>
<text text-anchor="middle" x="406.5" y="-99" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyVHDLModel.SyntaxModel.ConcurrentDeclarations</text>
</g>
<!-- pyVHDLModel.SyntaxModel.ConcurrentDeclarations&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch -->
<g id="edge5" class="edge">
<title>pyVHDLModel.SyntaxModel.ConcurrentDeclarations&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch</title>
<path fill="none" stroke="#000000" stroke-width=".5" d="M541.2245,-96.8221C551.6667,-96.4595 562.1742,-96.0946 572.5261,-95.7352"/>
<polygon fill="#000000" stroke="#000000" stroke-width=".5" points="572.6583,-97.4818 577.5946,-95.5592 572.5368,-93.9839 572.6583,-97.4818"/>
</g>
<!-- pyVHDLModel.SyntaxModel.ConcurrentStatements -->
<g id="node5" class="node">
<title>pyVHDLModel.SyntaxModel.ConcurrentStatements</title>
<polygon fill="none" stroke="#000000" stroke-width=".5" points="538,-74 275,-74 275,-55 538,-55 538,-74"/>
<text text-anchor="middle" x="406.5" y="-62" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyVHDLModel.SyntaxModel.ConcurrentStatements</text>
</g>
<!-- pyVHDLModel.SyntaxModel.ConcurrentStatements&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch -->
<g id="edge6" class="edge">
<title>pyVHDLModel.SyntaxModel.ConcurrentStatements&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch</title>
<path fill="none" stroke="#000000" stroke-width=".5" d="M508.038,-74.0192C533.8483,-76.4389 561.6574,-79.046 587.72,-81.4894"/>
<polygon fill="#000000" stroke="#000000" stroke-width=".5" points="587.7666,-83.2513 592.9082,-81.9758 588.0934,-79.7666 587.7666,-83.2513"/>
</g>
<!-- pyVHDLModel.SyntaxModel.GenerateBranch&#45;&gt;pyVHDLModel.SyntaxModel.ElsifGenerateBranch -->
<g id="edge2" class="edge">
<title>pyVHDLModel.SyntaxModel.GenerateBranch&#45;&gt;pyVHDLModel.SyntaxModel.ElsifGenerateBranch</title>
<path fill="none" stroke="#000000" stroke-width=".5" d="M789.8559,-81.9814C817.068,-79.265 846.8008,-76.2971 874.3199,-73.5501"/>
<polygon fill="#000000" stroke="#000000" stroke-width=".5" points="874.63,-75.2779 879.4314,-73.0398 874.2823,-71.7952 874.63,-75.2779"/>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinElsifBranch -->
<g id="node7" class="node">
<title>pyVHDLModel.SyntaxModel.MixinElsifBranch</title>
<g id="a_node7"><a xlink:title="A ``BaseElsifBranch`` is a mixin&#45;class for all elsif&#45;branches.">
<polygon fill="none" stroke="#000000" stroke-width=".5" points="812,-55 577,-55 577,-36 812,-36 812,-55"/>
<text text-anchor="middle" x="694.5" y="-43" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyVHDLModel.SyntaxModel.MixinElsifBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinElsifBranch&#45;&gt;pyVHDLModel.SyntaxModel.ElsifGenerateBranch -->
<g id="edge3" class="edge">
<title>pyVHDLModel.SyntaxModel.MixinElsifBranch&#45;&gt;pyVHDLModel.SyntaxModel.ElsifGenerateBranch</title>
<path fill="none" stroke="#000000" stroke-width=".5" d="M812.238,-53.0554C822.1964,-53.6944 832.3102,-54.3434 842.3715,-54.9891"/>
<polygon fill="#000000" stroke="#000000" stroke-width=".5" points="842.5253,-56.7525 847.6271,-55.3263 842.7495,-53.2596 842.5253,-56.7525"/>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinBranch -->
<g id="node8" class="node">
<title>pyVHDLModel.SyntaxModel.MixinBranch</title>
<g id="a_node8"><a xlink:title="A ``BaseBranch`` is a mixin&#45;class for all statements with branches.">
<polygon fill="none" stroke="#000000" stroke-width=".5" points="225,-56 11,-56 11,-37 225,-37 225,-56"/>
<text text-anchor="middle" x="118" y="-44" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyVHDLModel.SyntaxModel.MixinBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditionalBranch -->
<g id="node10" class="node">
<title>pyVHDLModel.SyntaxModel.MixinConditionalBranch</title>
<g id="a_node10"><a xlink:title="A ``BaseBranch`` is a mixin&#45;class for all branch statements with a condition.">
<polygon fill="none" stroke="#000000" stroke-width=".5" points="541,-37 272,-37 272,-18 541,-18 541,-37"/>
<text text-anchor="middle" x="406.5" y="-25" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyVHDLModel.SyntaxModel.MixinConditionalBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinBranch&#45;&gt;pyVHDLModel.SyntaxModel.MixinConditionalBranch -->
<g id="edge7" class="edge">
<title>pyVHDLModel.SyntaxModel.MixinBranch&#45;&gt;pyVHDLModel.SyntaxModel.MixinConditionalBranch</title>
<path fill="none" stroke="#000000" stroke-width=".5" d="M225.0168,-39.4521C238.5847,-38.5585 252.6244,-37.6339 266.6094,-36.7129"/>
<polygon fill="#000000" stroke="#000000" stroke-width=".5" points="266.8842,-38.4487 271.7583,-36.3738 266.6541,-34.9563 266.8842,-38.4487"/>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditional -->
<g id="node9" class="node">
<title>pyVHDLModel.SyntaxModel.MixinConditional</title>
<g id="a_node9"><a xlink:title="A ``BaseConditional`` is a mixin&#45;class for all statements with a condition.">
<polygon fill="none" stroke="#000000" stroke-width=".5" points="236,-19 0,-19 0,0 236,0 236,-19"/>
<text text-anchor="middle" x="118" y="-7" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00" fill="#000000">pyVHDLModel.SyntaxModel.MixinConditional</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditional&#45;&gt;pyVHDLModel.SyntaxModel.MixinConditionalBranch -->
<g id="edge8" class="edge">
<title>pyVHDLModel.SyntaxModel.MixinConditional&#45;&gt;pyVHDLModel.SyntaxModel.MixinConditionalBranch</title>
<path fill="none" stroke="#000000" stroke-width=".5" d="M236.1764,-16.8732C246.2061,-17.499 256.4097,-18.1356 266.5845,-18.7704"/>
<polygon fill="#000000" stroke="#000000" stroke-width=".5" points="266.4769,-20.517 271.5762,-19.0819 266.695,-17.0238 266.4769,-20.517"/>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditionalBranch&#45;&gt;pyVHDLModel.SyntaxModel.MixinElsifBranch -->
<g id="edge9" class="edge">
<title>pyVHDLModel.SyntaxModel.MixinConditionalBranch&#45;&gt;pyVHDLModel.SyntaxModel.MixinElsifBranch</title>
<path fill="none" stroke="#000000" stroke-width=".5" d="M541.2245,-35.9203C551.3224,-36.5514 561.4814,-37.1863 571.5018,-37.8126"/>
<polygon fill="#000000" stroke="#000000" stroke-width=".5" points="571.6286,-39.5739 576.7281,-38.1393 571.847,-36.0807 571.6286,-39.5739"/>
</g>
</g>
</svg>
